#include<iostream>
#include<vector>
using namespace std;
const int H=1100,inf=1000000000;
vector<int> a[H][2],out;
int n,m,mark[H],smallest[H],len[H],par[H];

int dfs(int x){
	mark[x]=1;
	int temp;
	for(int i=0;i<(int)a[x][0].size();i++){
		temp=a[x][0][i];
		if(temp==par[x]){
			continue;
		}
		if(mark[temp]==0){
			len[temp]=len[x]+1;
			par[temp]=x;
			if(dfs(temp)==1){
				out.push_back(a[x][1][i]);
			}else{
				smallest[x]=min(smallest[x],smallest[temp]);
			}
		}else{
			smallest[x]=min(smallest[x],len[temp]);
		}
	}
//	cerr<<x<<" "<<smallest[x]<<" "<<len[x]<<endl;
	if(smallest[x]==len[x] || smallest[x]==inf){
		smallest[x]=len[x]-1;
		return 1;
	}else{
		
		return 0;
	}
}


int main(){
	scanf("%d%d",&n,&m);
	int x,y;
	for(int i=0;i<m;i++){
		scanf("%d%d",&x,&y);
		a[x][0].push_back(y);
		a[y][0].push_back(x);
		a[x][1].push_back(i+1);
		a[y][1].push_back(i+1);
	}
	for(int i=1;i<=n;i++){
		smallest[i]=inf;
	}
	for(int i=1;i<=n;i++){
		if(mark[i]==0){
			dfs(i);
		}
	}
	sort(out.begin(),out.end());
	cout<<out.size()<<endl;
	for(int i=0;i<(int)out.size();i++){
		cout<<out[i]<<" ";
	}
	cout<<endl;
	return 0;
}
		

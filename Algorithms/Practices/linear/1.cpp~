#include<iostream>
using namespace std;
const int H=510;
int a[H][H],n,m,p,mod[H],paye[H],counter;
void myswap(int x,int y){
	for(int j=0;j<=m;j++){
		swap(a[x][j],a[y][j]);
	}
}
struct node{
	int r,s,d;
};
node gcd(int x,int y){
	node temp;
	if(y==0){
		temp.s=0;temp.d=0;temp.r=0;
		return temp;
	}
	if(x%y==0){
		temp.r=0;temp.s=1;temp.d=y;
		return temp;
	}
	node q=gcd(y,x%y);
	temp.r=q.s;
	temp.s=q.r-q.s*(x/y);
	temp.d=q.d;
	return temp;
}

int main(){
	scanf("%d%d%d",&n,&m,&p);
	node temp;
	temp=gcd(p,2);
	while(temp.s<0){
		temp.s+=p;
	}
	while(temp.r<0){
		temp.r+=2;
	}	
	for(int i=1;i<p;i++){
		temp=gcd(p,i);	
		while(temp.s<0){
			temp.s+=p;
		}
		while(temp.r<0){
			temp.r+=i;
		}
		temp.s%=p;
		temp.r%=i;
		mod[i]=temp.s;
	}
	return 0;
	for(int i=0;i<n;i++){
		for(int j=0;j<=m;j++){
			scanf("%d",&a[i][j]);
		}
	}
	int row=0,col=0;
	for(;col<m;col++){
		for(int i=row;i<=n;i++){
			if(a[i][col]!=0){
				myswap(i,row);
				int x=mod[a[row][col]];
				for(int j=0;j<=m;j++){
					a[row][j]*=x;
					a[row][j]%=p;
				}
				for(int j=0;j<n;j++){
					if(j==row){
						continue;
					}
					int y=a[j][col];
					for(int k=0;k<=m;k++){
						a[j][k]-=y*a[row][k];
						a[j][k]+=p*1000;
						a[j][k]%=p;
					}
				}
				row++;
				paye[counter++]=col;
				break;
			}
		}
	}
	for(int i=row;i<n;i++){
		if(a[i][m]!=0){
			cout<<"bad"<<endl;
			for(int i=0;i<counter;i++){
				cout<<paye[i]+1<<" ";
			}
			cout<<endl;
			return 0;
		}
	}
	cout<<"good"<<endl;
	for(int i=0;i<m;i++){
		cout<<a[i][m]<<" ";
	}
	cout<<endl;
	for(int i=0;i<counter;i++){
		cout<<paye[i]+1<<" ";
	}
	cout<<endl;	
	return 0;
}
